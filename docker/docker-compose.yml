version: '3.8'

services:
  crewai-platform:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: crewai-platform
    restart: unless-stopped
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - SERPER_API_KEY=${SERPER_API_KEY}
      - MODEL=${MODEL:-gpt-4o-mini}
      - DATABASE_URL=postgresql://crewai:crewai_password@postgres:5432/crewai_db
      - REDIS_URL=redis://redis:6379
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    volumes:
      - ../outputs:/app/outputs
      - ../logs:/app/logs
      - ../uploads:/app/uploads
      - ../.env:/app/.env
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - redis
      - elasticsearch
    networks:
      - crewai-network

  postgres:
    image: postgres:15-alpine
    container_name: crewai-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=crewai_db
      - POSTGRES_USER=crewai
      - POSTGRES_PASSWORD=crewai_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    networks:
      - crewai-network

  redis:
    image: redis:7-alpine
    container_name: crewai-redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - crewai-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: crewai-elasticsearch
    restart: unless-stopped
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - crewai-network

  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    container_name: crewai-kibana
    restart: unless-stopped
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - crewai-network

  prometheus:
    image: prom/prometheus:latest
    container_name: crewai-prometheus
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - crewai-network

  grafana:
    image: grafana/grafana:latest
    container_name: crewai-grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - crewai-network

  nginx:
    image: nginx:alpine
    container_name: crewai-nginx
    restart: unless-stopped
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - crewai-platform
    networks:
      - crewai-network

volumes:
  postgres_data:
  redis_data:
  elasticsearch_data:
  prometheus_data:
  grafana_data:

networks:
  crewai-network:
    driver: bridge 